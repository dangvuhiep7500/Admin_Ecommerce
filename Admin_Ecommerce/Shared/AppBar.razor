@using Admin_Ecommerce.Service;
@using Admin_Ecommerce.Controller_API;
@inject IAuthService AuthService
@inject ILocalStorageService _localStorage
<MudAppBar Elevation="1" Color="Color.Info">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
    <MudSpacer />
    <MudMenu>
        <ActivatorContent>
            <MudAvatar Image="favicon.png" />
        </ActivatorContent>
    </MudMenu>
    <MudMenu Color="Color.Dark" Class="px-2" FullWidth="true">
        <ActivatorContent>
            <span class="d-none d-md-block dropdown-toggle ps-2">
                @user?.lastName @user?.firstName
           </span>
        </ActivatorContent>
        <ChildContent>
            <MudMenuItem>Profile</MudMenuItem>
            <MudMenuItem>Theme</MudMenuItem>
            <MudMenuItem>Usage</MudMenuItem>
            <MudMenuItem OnClick="Logout">Sign Out</MudMenuItem>
        </ChildContent>
    </MudMenu>
</MudAppBar>
<MudDrawer @bind-Open="_drawerOpen" Elevation="1">
    <MudDrawerHeader>
        <a href="/" class="logo d-flex align-items-center">
            <img src="logo.png" alt="">
            <MudText Class="px-2" Typo="Typo.subtitle2">Admin_Ecommerce</MudText>
        </a>
    </MudDrawerHeader>
    <MudDivider Class="my-2" />
    <NavMenu />
</MudDrawer>
@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    private const string Service = "http://localhost:5000/users/me";
    private User? user = new User();
    protected override async Task OnInitializedAsync() => await GetProfile();
    protected async Task GetProfile()
    {
        user = await httpClient.GetFromJsonAsync<User>(Service);
        if (user?.role != "admin" && user?.role != "super-admin")
        {
            await _localStorage.RemoveItemAsync("Token");
            NavigationManager.NavigateTo("/not-auth");
        }
    }   

    private async void Logout()
    {
        await AuthService.Logout();
        NavigationManager.NavigateTo("/");
    }

}
