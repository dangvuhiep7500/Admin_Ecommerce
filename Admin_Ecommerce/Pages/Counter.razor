@page "/counter"

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@using System.Net.Http.Headers;
@inject HttpClient Http
@inject IAccessTokenProvider TokenProvider
@inject NavigationManager NavigationManager
<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <EditForm Model="@_product" OnValidSubmit="PostRequest">
                <DataAnnotationsValidator />
                <MudTextField @bind-Value="_product.title" For="@(() => _product.title)"T="string" Label="Product Title" Required="true" RequiredError="Product Title is required!" />
                <MudTextField @bind-Value="_product.description" For="@(() =>_product.description)" T="string" Label="Descreption" Required="true" RequiredError="Descreption Title is required!" />
                <MudNumericField HideSpinButtons="true" @bind-Value="_product.price"  Label="Price" Variant="Variant.Text" Min="0" />
                <MudTextField @bind-Value="_product.image" For="@(() =>_product.image)" T="string" Label="Image" Required="true" RequiredError="Image is required!" />
                <MudTextField @bind-Value="_product.categoryId" For="@(() => _product.categoryId)" T=" string" Label="CategoryID" Required="true" RequiredError="CategoryID is required!" />
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto mt-2">Register</MudButton>
                </MudCardActions>
            </EditForm>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    private Products _product = new Products();
    
    private async Task PostRequest()
    {
        {
            string apiUrl = "http://localhost:5000/products/create";

            if (_product.title == null)
            {
                return;
            }

            await Http.PostAsJsonAsync(apiUrl, _product);
            NavigationManager.NavigateTo("/");
        }
    }
}

