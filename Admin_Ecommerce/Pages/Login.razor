@layout LoginLayout
@page "/"
@using System.Security.Claims
@using Admin_Ecommerce.Controller_API;
@using Admin_Ecommerce.Service;
@using System.ComponentModel.DataAnnotations
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject IAuthService AuthService

@if (ShowAuthError)
{
     Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomLeft;
     Snackbar.Add($"{Error}", Severity.Error);
    
} 
<div class="container">
    <section class="section register d-flex flex-column align-items-center justify-content-center py-4">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-4 col-md-6 d-flex flex-column align-items-center justify-content-center ">
                    <div class="d-flex justify-content-center py-4">
                        <a href="#" class="logo d-flex align-items-center w-auto">
                            <img src="logo.png" alt="">
                            <span class="d-none d-lg-block">NiceAdmin</span>
                        </a>
                    </div>
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="pt-4 pb-2">
                                <h5 class="card-title text-center pb-0 fs-4">Login to Your Account</h5>
                                <p class="text-center small">Enter your username & password to login</p>
                            </div>
                            <EditForm Model="@user" OnValidSubmit="HandleLogin" class="row g-3 needs-validation">
                                <DataAnnotationsValidator />
                                <div class="col-12">
                                    <label class="form-label">Username</label>
                                    <MudTextField Class="form-control" @bind-Value="user.email" For="@(() => user.email)" T="string" Margin="Margin.Dense" Variant="Variant.Outlined" />
                                </div>
                                <div class="col-12">
                                    <label class="form-label">Password</label>
                                    <MudTextField Class="form-control" @bind-Value="user.password" For="@(() => user.password)" InputType="InputType.Password" Margin="Margin.Dense" Variant="Variant.Outlined" />
                                </div>
                                <div class="col-12">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="remember" value="true" id="rememberMe">
                                        <label class="form-check-label" for="rememberMe">Remember me</label>
                                    </div>
                                </div>
                                <MudCardActions Class="col-12">
                                    <button class="btn btn-primary w-100" type="submit">Login</button>
                                </MudCardActions>
                            </EditForm>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
@code {
    private LoginModel user = new LoginModel();
    public bool ShowAuthError { get; set; }
    public string? Error { get; set; }
    protected override void OnInitialized()
    {
        NavigationManager.NavigateTo("/");
    }
    private async Task HandleLogin()
    {
        ShowAuthError = false;
        var result = await AuthService.Login(user);
        if (!result.Successful)
        {
            Error = result.ErrorMessage;
            ShowAuthError = true;
        }
        else
        {
            NavigationManager.NavigateTo("/index");
        }

    }

}
